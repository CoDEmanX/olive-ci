# If name is omitted, then the path to file is used, e.g.
# .github/workflows/test-windows.yaml
name: Windows Test

on:
  push:
    branches:
      - windows-test

defaults:
  run:
    # Windows default is powershell!
    shell: cmd

jobs:
  set-env:
    name: set-env test
    runs-on: windows-latest
    steps:
      - name: with quotes
        run: |
          echo "::set-env name=pkgname1::Olive hash = %GITHUB_SHA:~0,8%"

      - name: without quotes
        run: |
          echo ::set-env name=pkgname2::Olive hash = %GITHUB_SHA:~0,8%

      - name: print
        run: |
          echo PKGNAME1 = %PKGNAME1% ^| JSON: ${{ toJSON( env.PKGNAME1 ) }}
          echo PKGNAME2 = %PKGNAME2% ^| JSON: ${{ toJSON( env.PKGNAME2 ) }}

  find-nsis:
    name: Find NSIS
    runs-on: windows-latest
    steps:
      - name: Already in PATH?
        run: |
          where makensis
      # BROKEN: ${{ env.PATH }} results in empty string,
      # i.e. PATH is mostly cleared and thus where command cannot be found anymore
      #- name: Pass env (action syntax)
      #  env:
      #    PATH: C:\Program Files (x86)\NSIS;${{ env.PATH }}
      #  run: |
      #    echo %PATH%
      #    where makensis

      # BROKEN: %PATH% isn't resolved either
      #- name: Pass env (shell syntax)
      #  env:
      #    PATH: C:\Program Files (x86)\NSIS;%PATH%
      #  run: |
      #      echo %PATH%
      #      where makensis
      - name: Set env (shell)
        run: |
          md another_location
          copy C:\Program Files (x86)\NSIS\makensis.exe another_location
          set PATH=%CD%\another_location;%PATH%
          echo %PATH%
          where makensis
      - name: Set env (action)
        run: |
          echo ::set-env name=PATH::C:\Program Files (x86)\NSIS;%PATH%
          echo %PATH%
          where makensis

  powershell:
    name: PowerShell test
    runs-on: windows-latest
    defaults:
      run:
        shell: powershell
    steps:
      - name: Substring
        run: |
          Write-Output "Olive $($env:GITHUB_SHA.substring(0, 8))"
      - name: Set env
        run: |
          New-Item new_location -ItemType Directory
          Copy-Item "C:\Program Files (x86)\NSIS\makensis.exe" new_location
          Write-Output "::set-env name=PATH::$(Join-Path $(Get-Location) new_location);$env:PATH"
          Write-Output $env:PATH
          (Get-Command makensis).Path
      - name: Remove alias (PowerShell < 6)
        run: |
          Remove-Item Alias:curl
          curl --version
      - name: Persistent?
        continue-on-error: true
        run: |
          curl --version
      - name: Remove alias (PowerShell >= 6)
        continue-on-error: true
        run: |
          Remove-Alias curl
          curl --version
      - name: Persistent?
        continue-on-error: true
        run: |
          curl --version
        if: success()
